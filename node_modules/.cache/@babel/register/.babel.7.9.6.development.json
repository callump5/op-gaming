{
  "{\"sourceRoot\":\"/Users/callum/Documents/Coding/Projects/op-gaming/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/callum/Documents/Coding/Projects/op-gaming\",\"filename\":\"/Users/callum/Documents/Coding/Projects/op-gaming/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/callum/Documents/Coding/Projects/op-gaming\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/callum/Documents/Coding/Projects/op-gaming/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/callum/Documents/Coding/Projects/op-gaming",
      "filename": "/Users/callum/Documents/Coding/Projects/op-gaming/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/callum/Documents/Coding/Projects/op-gaming",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/callum/Documents/Coding/Projects/op-gaming/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/callum/Documents/Coding/Projects/op-gaming/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/callum/Documents/Coding/Projects/op-gaming/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.dev = exports.watch = exports.copyVendorFiles = exports.copyVendorJs = exports.copyVendorCss = exports.styles = exports.reload = exports.serve = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpCopy = _interopRequireDefault(require(\"gulp-copy\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar server = _browserSync[\"default\"].create();\n\nvar paths = {\n  scss: {\n    files: 'src/scss/**/*.scss',\n    src: 'src/scss/main.scss',\n    dist: 'web/assets/dist/css'\n  },\n  templates: {\n    src: 'templates/**/*.twig'\n  },\n  vendor: {\n    boostrap: {\n      src: 'node_modules/bootstrap/dist/css/bootstrap.css',\n      dist: 'web/assets/dist/css'\n    },\n    jquery: {\n      src: 'node_modules/jquery/dist/jquery.js',\n      dist: 'web/assets/dist/js'\n    }\n  }\n}; // SERVER FUNCTIONS\n// Init Server (ENTER SERVER LOCATION)\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://op-gaming.cal\"\n  });\n  done();\n}; // Reload Server\n\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n}; // SCSS FUNCTIONS\n// Convert SCSS to CSS\n\n\nexports.reload = reload;\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.scss.src).pipe(_gulpSourcemaps[\"default\"].init()).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe(_gulpSourcemaps[\"default\"].write()).pipe(_gulp[\"default\"].dest(paths.scss.dist)).pipe(server.stream());\n}; // COPY FUNCTIONS\n// Copy Vendor CSS\n\n\nexports.styles = styles;\n\nvar copyVendorCss = function copyVendorCss() {\n  return _gulp[\"default\"].src(paths.vendor.boostrap.src).pipe(_gulp[\"default\"].dest(paths.vendor.boostrap.dist));\n}; // Copy Vendor JS\n\n\nexports.copyVendorCss = copyVendorCss;\n\nvar copyVendorJs = function copyVendorJs() {\n  return _gulp[\"default\"].src(paths.vendor.jquery.src).pipe(_gulp[\"default\"].dest(paths.vendor.jquery.dist));\n}; // Copy Vendor Files\n\n\nexports.copyVendorJs = copyVendorJs;\n\nvar copyVendorFiles = function copyVendorFiles(done) {\n  copyVendorCss();\n  copyVendorJs();\n  done();\n}; // Watch For Changes\n\n\nexports.copyVendorFiles = copyVendorFiles;\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(paths.templates.src, reload);\n\n  _gulp[\"default\"].watch(paths.scss.files, styles);\n}; // Dev Function\n\n\nexports.watch = watch;\n\nvar dev = _gulp[\"default\"].series(serve, watch); //Gulp Default\n\n\nexports.dev = dev;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3N3ZXJTeW5jIiwiY3JlYXRlIiwicGF0aHMiLCJzY3NzIiwiZmlsZXMiLCJzcmMiLCJkaXN0IiwidGVtcGxhdGVzIiwidmVuZG9yIiwiYm9vc3RyYXAiLCJqcXVlcnkiLCJzZXJ2ZSIsImRvbmUiLCJpbml0IiwicHJveHkiLCJyZWxvYWQiLCJzdHlsZXMiLCJndWxwIiwicGlwZSIsIm1hcHMiLCJvbiIsInNhc3MiLCJsb2dFcnJvciIsIndyaXRlIiwiZGVzdCIsInN0cmVhbSIsImNvcHlWZW5kb3JDc3MiLCJjb3B5VmVuZG9ySnMiLCJjb3B5VmVuZG9yRmlsZXMiLCJ3YXRjaCIsImRldiIsInNlcmllcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyx3QkFBWUMsTUFBWixFQUFmOztBQUVBLElBQU1DLEtBQUssR0FBRztBQUNWQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsS0FBSyxFQUFFLG9CQURMO0FBRUZDLElBQUFBLEdBQUcsRUFBRSxvQkFGSDtBQUdGQyxJQUFBQSxJQUFJLEVBQUU7QUFISixHQURJO0FBT1ZDLEVBQUFBLFNBQVMsRUFBRTtBQUNQRixJQUFBQSxHQUFHLEVBQUU7QUFERSxHQVBEO0FBV1ZHLEVBQUFBLE1BQU0sRUFBRTtBQUNKQyxJQUFBQSxRQUFRLEVBQUU7QUFDTkosTUFBQUEsR0FBRyxFQUFFLCtDQURDO0FBRU5DLE1BQUFBLElBQUksRUFBRTtBQUZBLEtBRE47QUFLSkksSUFBQUEsTUFBTSxFQUFFO0FBQ0pMLE1BQUFBLEdBQUcsRUFBRSxvQ0FERDtBQUVKQyxNQUFBQSxJQUFJLEVBQUU7QUFGRjtBQUxKO0FBWEUsQ0FBZCxDLENBdUJBO0FBQ0E7O0FBQ08sSUFBTUssS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQ0MsSUFBRCxFQUFVO0FBQzNCYixFQUFBQSxNQUFNLENBQUNjLElBQVAsQ0FBWTtBQUNSQyxJQUFBQSxLQUFLLEVBQUU7QUFEQyxHQUFaO0FBR0FGLEVBQUFBLElBQUk7QUFDUCxDQUxNLEMsQ0FNUDs7Ozs7QUFDTyxJQUFNRyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDSCxJQUFELEVBQVU7QUFDNUJiLEVBQUFBLE1BQU0sQ0FBQ2dCLE1BQVA7QUFDQUgsRUFBQUEsSUFBSTtBQUNQLENBSE0sQyxDQU1QO0FBQ0E7Ozs7O0FBQ08sSUFBTUksTUFBTSxHQUFHLFNBQVRBLE1BQVMsR0FBTTtBQUN4QixTQUFPQyxpQkFBS1osR0FBTCxDQUFTSCxLQUFLLENBQUNDLElBQU4sQ0FBV0UsR0FBcEIsRUFFRmEsSUFGRSxDQUVHQywyQkFBS04sSUFBTCxFQUZILEVBR0ZLLElBSEUsQ0FHRyw0QkFBT0UsRUFBUCxDQUFVLE9BQVYsRUFBbUJDLHFCQUFLQyxRQUF4QixDQUhILEVBSUZKLElBSkUsQ0FJR0MsMkJBQUtJLEtBQUwsRUFKSCxFQUtGTCxJQUxFLENBS0dELGlCQUFLTyxJQUFMLENBQVV0QixLQUFLLENBQUNDLElBQU4sQ0FBV0csSUFBckIsQ0FMSCxFQU1GWSxJQU5FLENBTUduQixNQUFNLENBQUMwQixNQUFQLEVBTkgsQ0FBUDtBQU9ILENBUk0sQyxDQVVQO0FBQ0E7Ozs7O0FBQ08sSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixHQUFNO0FBQy9CLFNBQU9ULGlCQUFLWixHQUFMLENBQVNILEtBQUssQ0FBQ00sTUFBTixDQUFhQyxRQUFiLENBQXNCSixHQUEvQixFQUNGYSxJQURFLENBQ0dELGlCQUFLTyxJQUFMLENBQVV0QixLQUFLLENBQUNNLE1BQU4sQ0FBYUMsUUFBYixDQUFzQkgsSUFBaEMsQ0FESCxDQUFQO0FBR0gsQ0FKTSxDLENBS1A7Ozs7O0FBQ08sSUFBTXFCLFlBQVksR0FBRyxTQUFmQSxZQUFlLEdBQU07QUFDOUIsU0FBT1YsaUJBQUtaLEdBQUwsQ0FBU0gsS0FBSyxDQUFDTSxNQUFOLENBQWFFLE1BQWIsQ0FBb0JMLEdBQTdCLEVBQ0ZhLElBREUsQ0FDR0QsaUJBQUtPLElBQUwsQ0FBVXRCLEtBQUssQ0FBQ00sTUFBTixDQUFhRSxNQUFiLENBQW9CSixJQUE5QixDQURILENBQVA7QUFFSCxDQUhNLEMsQ0FLUDs7Ozs7QUFDTyxJQUFNc0IsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDaEIsSUFBRCxFQUFVO0FBQ3JDYyxFQUFBQSxhQUFhO0FBQ2JDLEVBQUFBLFlBQVk7QUFDWmYsRUFBQUEsSUFBSTtBQUNQLENBSk0sQyxDQU9QOzs7OztBQUNPLElBQU1pQixLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0FBQ3ZCWixtQkFBS1ksS0FBTCxDQUFXM0IsS0FBSyxDQUFDSyxTQUFOLENBQWdCRixHQUEzQixFQUFnQ1UsTUFBaEM7O0FBQ0FFLG1CQUFLWSxLQUFMLENBQVczQixLQUFLLENBQUNDLElBQU4sQ0FBV0MsS0FBdEIsRUFBNkJZLE1BQTdCO0FBQ0gsQ0FITSxDLENBS1A7Ozs7O0FBQ08sSUFBTWMsR0FBRyxHQUFHYixpQkFBS2MsTUFBTCxDQUFhcEIsS0FBYixFQUFvQmtCLEtBQXBCLENBQVosQyxDQUdQOzs7O2VBQ2VDLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL2NhbGx1bS9Eb2N1bWVudHMvQ29kaW5nL1Byb2plY3RzL29wLWdhbWluZy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2Fzcyc7XG5pbXBvcnQgbWFwcyBmcm9tICdndWxwLXNvdXJjZW1hcHMnO1xuaW1wb3J0IG1pbmlmeSBmcm9tICdndWxwLWNsZWFuLWNzcyc7XG5pbXBvcnQgYnJvc3dlclN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcbmltcG9ydCBjb3B5IGZyb20gJ2d1bHAtY29weSc7XG5pbXBvcnQgZGVsIGZyb20gJ2RlbCc7XG5cbmNvbnN0IHNlcnZlciA9IGJyb3N3ZXJTeW5jLmNyZWF0ZSgpO1xuXG5jb25zdCBwYXRocyA9IHtcbiAgICBzY3NzOiB7XG4gICAgICAgIGZpbGVzOiAnc3JjL3Njc3MvKiovKi5zY3NzJyxcbiAgICAgICAgc3JjOiAnc3JjL3Njc3MvbWFpbi5zY3NzJyxcbiAgICAgICAgZGlzdDogJ3dlYi9hc3NldHMvZGlzdC9jc3MnXG4gICAgfSxcblxuICAgIHRlbXBsYXRlczoge1xuICAgICAgICBzcmM6ICd0ZW1wbGF0ZXMvKiovKi50d2lnJ1xuICAgIH0sXG5cbiAgICB2ZW5kb3I6IHtcbiAgICAgICAgYm9vc3RyYXA6IHtcbiAgICAgICAgICAgIHNyYzogJ25vZGVfbW9kdWxlcy9ib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLmNzcycsXG4gICAgICAgICAgICBkaXN0OiAnd2ViL2Fzc2V0cy9kaXN0L2NzcydcbiAgICAgICAgfSxcbiAgICAgICAganF1ZXJ5OiB7XG4gICAgICAgICAgICBzcmM6ICdub2RlX21vZHVsZXMvanF1ZXJ5L2Rpc3QvanF1ZXJ5LmpzJyxcbiAgICAgICAgICAgIGRpc3Q6ICd3ZWIvYXNzZXRzL2Rpc3QvanMnXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIFNFUlZFUiBGVU5DVElPTlNcbi8vIEluaXQgU2VydmVyIChFTlRFUiBTRVJWRVIgTE9DQVRJT04pXG5leHBvcnQgY29uc3Qgc2VydmUgPSAoZG9uZSkgPT4ge1xuICAgIHNlcnZlci5pbml0KHtcbiAgICAgICAgcHJveHk6IFwiaHR0cDovL29wLWdhbWluZy5jYWxcIlxuICAgIH0pO1xuICAgIGRvbmUoKTtcbn1cbi8vIFJlbG9hZCBTZXJ2ZXJcbmV4cG9ydCBjb25zdCByZWxvYWQgPSAoZG9uZSkgPT4ge1xuICAgIHNlcnZlci5yZWxvYWQoKTtcbiAgICBkb25lKCk7XG59XG5cblxuLy8gU0NTUyBGVU5DVElPTlNcbi8vIENvbnZlcnQgU0NTUyB0byBDU1NcbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnNjc3Muc3JjKVxuXG4gICAgICAgIC5waXBlKG1hcHMuaW5pdCgpKVxuICAgICAgICAucGlwZShzYXNzKCkub24oJ2Vycm9yJywgc2Fzcy5sb2dFcnJvcikpXG4gICAgICAgIC5waXBlKG1hcHMud3JpdGUoKSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnNjc3MuZGlzdCkpXG4gICAgICAgIC5waXBlKHNlcnZlci5zdHJlYW0oKSlcbn1cblxuLy8gQ09QWSBGVU5DVElPTlNcbi8vIENvcHkgVmVuZG9yIENTU1xuZXhwb3J0IGNvbnN0IGNvcHlWZW5kb3JDc3MgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnZlbmRvci5ib29zdHJhcC5zcmMpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy52ZW5kb3IuYm9vc3RyYXAuZGlzdCkpXG4gICAgXG59XG4vLyBDb3B5IFZlbmRvciBKU1xuZXhwb3J0IGNvbnN0IGNvcHlWZW5kb3JKcyA9ICgpID0+IHtcbiAgICByZXR1cm4gZ3VscC5zcmMocGF0aHMudmVuZG9yLmpxdWVyeS5zcmMpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy52ZW5kb3IuanF1ZXJ5LmRpc3QpKVxufSBcblxuLy8gQ29weSBWZW5kb3IgRmlsZXNcbmV4cG9ydCBjb25zdCBjb3B5VmVuZG9yRmlsZXMgPSAoZG9uZSkgPT4ge1xuICAgIGNvcHlWZW5kb3JDc3MoKTtcbiAgICBjb3B5VmVuZG9ySnMoKTtcbiAgICBkb25lKCk7XG59XG5cblxuLy8gV2F0Y2ggRm9yIENoYW5nZXNcbmV4cG9ydCBjb25zdCB3YXRjaCA9ICgpID0+IHtcbiAgICBndWxwLndhdGNoKHBhdGhzLnRlbXBsYXRlcy5zcmMsIHJlbG9hZCk7XG4gICAgZ3VscC53YXRjaChwYXRocy5zY3NzLmZpbGVzLCBzdHlsZXMpO1xufVxuXG4vLyBEZXYgRnVuY3Rpb25cbmV4cG9ydCBjb25zdCBkZXYgPSBndWxwLnNlcmllcyggc2VydmUsIHdhdGNoKTtcblxuXG4vL0d1bHAgRGVmYXVsdFxuZXhwb3J0IGRlZmF1bHQgZGV2O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "server",
        "broswerSync",
        "create",
        "paths",
        "scss",
        "files",
        "src",
        "dist",
        "templates",
        "vendor",
        "boostrap",
        "jquery",
        "serve",
        "done",
        "init",
        "proxy",
        "reload",
        "styles",
        "gulp",
        "pipe",
        "maps",
        "on",
        "sass",
        "logError",
        "write",
        "dest",
        "stream",
        "copyVendorCss",
        "copyVendorJs",
        "copyVendorFiles",
        "watch",
        "dev",
        "series"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAYC,MAAZ,EAAf;;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,oBADL;AAEFC,IAAAA,GAAG,EAAE,oBAFH;AAGFC,IAAAA,IAAI,EAAE;AAHJ,GADI;AAOVC,EAAAA,SAAS,EAAE;AACPF,IAAAA,GAAG,EAAE;AADE,GAPD;AAWVG,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,GAAG,EAAE,+CADC;AAENC,MAAAA,IAAI,EAAE;AAFA,KADN;AAKJI,IAAAA,MAAM,EAAE;AACJL,MAAAA,GAAG,EAAE,oCADD;AAEJC,MAAAA,IAAI,EAAE;AAFF;AALJ;AAXE,CAAd,C,CAuBA;AACA;;AACO,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAC3Bb,EAAAA,MAAM,CAACc,IAAP,CAAY;AACRC,IAAAA,KAAK,EAAE;AADC,GAAZ;AAGAF,EAAAA,IAAI;AACP,CALM,C,CAMP;;;;;AACO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACH,IAAD,EAAU;AAC5Bb,EAAAA,MAAM,CAACgB,MAAP;AACAH,EAAAA,IAAI;AACP,CAHM,C,CAMP;AACA;;;;;AACO,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACxB,SAAOC,iBAAKZ,GAAL,CAASH,KAAK,CAACC,IAAN,CAAWE,GAApB,EAEFa,IAFE,CAEGC,2BAAKN,IAAL,EAFH,EAGFK,IAHE,CAGG,4BAAOE,EAAP,CAAU,OAAV,EAAmBC,qBAAKC,QAAxB,CAHH,EAIFJ,IAJE,CAIGC,2BAAKI,KAAL,EAJH,EAKFL,IALE,CAKGD,iBAAKO,IAAL,CAAUtB,KAAK,CAACC,IAAN,CAAWG,IAArB,CALH,EAMFY,IANE,CAMGnB,MAAM,CAAC0B,MAAP,EANH,CAAP;AAOH,CARM,C,CAUP;AACA;;;;;AACO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAOT,iBAAKZ,GAAL,CAASH,KAAK,CAACM,MAAN,CAAaC,QAAb,CAAsBJ,GAA/B,EACFa,IADE,CACGD,iBAAKO,IAAL,CAAUtB,KAAK,CAACM,MAAN,CAAaC,QAAb,CAAsBH,IAAhC,CADH,CAAP;AAGH,CAJM,C,CAKP;;;;;AACO,IAAMqB,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAOV,iBAAKZ,GAAL,CAASH,KAAK,CAACM,MAAN,CAAaE,MAAb,CAAoBL,GAA7B,EACFa,IADE,CACGD,iBAAKO,IAAL,CAAUtB,KAAK,CAACM,MAAN,CAAaE,MAAb,CAAoBJ,IAA9B,CADH,CAAP;AAEH,CAHM,C,CAKP;;;;;AACO,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAChB,IAAD,EAAU;AACrCc,EAAAA,aAAa;AACbC,EAAAA,YAAY;AACZf,EAAAA,IAAI;AACP,CAJM,C,CAOP;;;;;AACO,IAAMiB,KAAK,GAAG,SAARA,KAAQ,GAAM;AACvBZ,mBAAKY,KAAL,CAAW3B,KAAK,CAACK,SAAN,CAAgBF,GAA3B,EAAgCU,MAAhC;;AACAE,mBAAKY,KAAL,CAAW3B,KAAK,CAACC,IAAN,CAAWC,KAAtB,EAA6BY,MAA7B;AACH,CAHM,C,CAKP;;;;;AACO,IAAMc,GAAG,GAAGb,iBAAKc,MAAL,CAAapB,KAAb,EAAoBkB,KAApB,CAAZ,C,CAGP;;;;eACeC,G",
      "sourceRoot": "/Users/callum/Documents/Coding/Projects/op-gaming/",
      "sourcesContent": [
        "import gulp from 'gulp';\nimport sass from 'gulp-sass';\nimport maps from 'gulp-sourcemaps';\nimport minify from 'gulp-clean-css';\nimport broswerSync from 'browser-sync';\nimport copy from 'gulp-copy';\nimport del from 'del';\n\nconst server = broswerSync.create();\n\nconst paths = {\n    scss: {\n        files: 'src/scss/**/*.scss',\n        src: 'src/scss/main.scss',\n        dist: 'web/assets/dist/css'\n    },\n\n    templates: {\n        src: 'templates/**/*.twig'\n    },\n\n    vendor: {\n        boostrap: {\n            src: 'node_modules/bootstrap/dist/css/bootstrap.css',\n            dist: 'web/assets/dist/css'\n        },\n        jquery: {\n            src: 'node_modules/jquery/dist/jquery.js',\n            dist: 'web/assets/dist/js'\n        }\n    }\n}\n\n// SERVER FUNCTIONS\n// Init Server (ENTER SERVER LOCATION)\nexport const serve = (done) => {\n    server.init({\n        proxy: \"http://op-gaming.cal\"\n    });\n    done();\n}\n// Reload Server\nexport const reload = (done) => {\n    server.reload();\n    done();\n}\n\n\n// SCSS FUNCTIONS\n// Convert SCSS to CSS\nexport const styles = () => {\n    return gulp.src(paths.scss.src)\n\n        .pipe(maps.init())\n        .pipe(sass().on('error', sass.logError))\n        .pipe(maps.write())\n        .pipe(gulp.dest(paths.scss.dist))\n        .pipe(server.stream())\n}\n\n// COPY FUNCTIONS\n// Copy Vendor CSS\nexport const copyVendorCss = () => {\n    return gulp.src(paths.vendor.boostrap.src)\n        .pipe(gulp.dest(paths.vendor.boostrap.dist))\n    \n}\n// Copy Vendor JS\nexport const copyVendorJs = () => {\n    return gulp.src(paths.vendor.jquery.src)\n        .pipe(gulp.dest(paths.vendor.jquery.dist))\n} \n\n// Copy Vendor Files\nexport const copyVendorFiles = (done) => {\n    copyVendorCss();\n    copyVendorJs();\n    done();\n}\n\n\n// Watch For Changes\nexport const watch = () => {\n    gulp.watch(paths.templates.src, reload);\n    gulp.watch(paths.scss.files, styles);\n}\n\n// Dev Function\nexport const dev = gulp.series( serve, watch);\n\n\n//Gulp Default\nexport default dev;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590405843063
  }
}